Documentation (for maintenance)
-------------------------------

	    sundials.mli	    -- generic shared definitions
	    sundials.ml
	    sundials_ml.h
	    sundials_ml.c
	         |
	      NVECTORS		    -- abstract nvectors
	    /           \
	   /	         \
  	SPILS              dls.mli	       -- interfaces to direct linear solvers
   -- interfaces to        dls.ml	          (dense, array dense, band, and
   scaled preconditioned   dls_ml.c	 	  array band matrices)
   linear solvers         /    |   \
	                 /     |    \
                     CVODE     IDA    KINSOL   -- interfaces to solvers
                    /CVODES   /IDAS

NVECTORS
--------
     nvector.mli
     nvector.ml

     nvector_ml.h
     nvector_ml.c

     nvector_array.mli
     nvector_array.ml

SPILS
-----
    spils.mli
    spils.ml

    spils_nvector.mli
    spils_nvector.ml

    spils_serial.mli
    spils_serial.ml

    spils_ml.c
    spils_ml.h
    spils_ml_nvec.c

CVODE
-----
     cvode.mli
     cvode.ml

     cvode_serial.mli
     cvode_serial.ml

     cvode_nvector.mli
     cvode_nvector.ml

     cvode_ml.h
     cvode_ml.c
     cvode_ml_nvec.c

The C sides of the cvode solver interface are split into two parts:
functions that are independent of nvectors (cvode_ml.c), and functions that
depend on nvectors (cvode_ml_nvec.c). The latter are compiled twice, once
with -DCVODE_ML_BIGARRAYS to produce code that works with Bigarrays as
nvectors (to be called from Cvode_serial), and once without to produce code
that works with abstract nvectors (to be called from Cvode_nvector).

IDA
---
     ida.mli
     ida.ml

     ida_nvector.mli
     ida_nvector.ml

     ida_serial.mli
     ida_serial.ml

     ida_ml.h
     ida_ml.c
     ida_ml_nvec.c

The C sides of the ida solver interface are split into two parts: functions
that are independent of nvectors (ida_ml.c), and functions that depend on
nvectors (cvode_ml_nvec.h). The latter are compiled twice, once with
-DIDA_ML_BIGARRAYS to produce code that works with Bigarrays as nvectors (to
be called from Ida_serial), and once without to produce code that works with
abstract nvectors (to be called from Ida_nvector).

