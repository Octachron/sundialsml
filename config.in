# Configured with:
# @configure_command@

VERSION = @version@
VERSIONP = @versionp@

CVODE_DOC_ROOT = http://computation.llnl.gov/casc/sundials/documentation/cv_guide/
CVODES_DOC_ROOT = http://computation.llnl.gov/casc/sundials/documentation/cvs_guide/
IDA_DOC_ROOT = http://computation.llnl.gov/casc/sundials/documentation/ida_guide/
IDAS_DOC_ROOT = http://computation.llnl.gov/casc/sundials/documentation/idas_guide/
KINSOL_DOC_ROOT = http://computation.llnl.gov/casc/sundials/documentation/kin_guide/
OCAML_DOC_ROOT = http://caml.inria.fr/pub/docs/manual-ocaml/libref/

CC = @cc@
CPP= @cpp@
CFLAGS += @cppflags@ @cflags@
LDFLAGS += @ldflags@
CPPFLAGS += @cppflags@
C_SUPPRESS_WARNINGS = @c_suppress_warnings@

LAPACK_ENABLED=@lapack_enabled@

MPICC = @mpicc@
MPIRUN = @mpirun@
MPI_ENABLED=@ocamlmpi_enabled@

MPI_LIBLINK= -lsundials_nvecparallel

LIB_PATH = @sundials_lib_path@
CVODE_LDFLAGS = @cvode_ldflags@ $(LDFLAGS)
CVODE_CFLAGS = @cvode_cppflags@ $(CFLAGS)
CVODES_LDFLAGS = @cvodes_ldflags@ $(LDFLAGS)
CVODES_CFLAGS = @cvodes_cppflags@ $(CFLAGS)
IDA_LDFLAGS = @ida_ldflags@ $(LDFLAGS)
IDA_CFLAGS = @ida_cppflags@ $(CFLAGS)
IDAS_LDFLAGS = @idas_ldflags@ $(LDFLAGS)
IDAS_CFLAGS = @idas_cppflags@ $(CFLAGS)
KINSOL_LDFLAGS = @kinsol_ldflags@ $(LDFLAGS)
KINSOL_CFLAGS = @kinsol_cppflags@ $(CFLAGS)

define common
  $(eval seen :=)
  $(eval dups :=)
  $(foreach _,$1,$(if $(filter $_,${seen}),
      $(if $(filter $_,${dups}),,$(eval dups += $_)),
      $(eval seen += $_)))
  ${dups}
endef

OCAMLC ?= @OCAMLBIN@ocamlc
OCAMLFLAGS = -annot @ocamlflags@
OCAML_INCLUDE := $(shell $(OCAMLC) -where)
OCAML_ALL_LIBLINK = $(strip $(call common, $(CVODE_LDFLAGS) $(CVODES_LDFLAGS) \
					   $(IDA_LDFLAGS) $(IDAS_LDFLAGS)     \
					   $(KINSOL_LDFLAGS)))
OCAML_CVODE_LIBLINK  = $(filter-out $(OCAML_ALL_LIBLINK), $(CVODE_LDFLAGS))
OCAML_CVODES_LIBLINK = $(filter-out $(OCAML_ALL_LIBLINK), $(CVODES_LDFLAGS))
OCAML_IDA_LIBLINK    = $(filter-out $(OCAML_ALL_LIBLINK), $(IDA_LDFLAGS))
OCAML_IDAS_LIBLINK   = $(filter-out $(OCAML_ALL_LIBLINK), $(IDAS_LDFLAGS))
OCAML_KINSOL_LIBLINK = $(filter-out $(OCAML_ALL_LIBLINK), $(KINSOL_LDFLAGS))
OCAML_MPI_LIBLINK = -lsundials_nvecparallel
OCAML_3X = @ocaml_3x@

OCAML ?= @OCAMLBIN@ocaml

OCAMLMPI ?= @ocamlmpi_path@

CAMLP4OF= @OCAMLBIN@camlp4of
CAMLP4ORF= @OCAMLBIN@camlp4orf

PKGDIR = @libdir@sundials/
STUBDIR= @stubdir@

DOCDIR = @docdir@sundials_ml
INSTALL_DOCS = @install_docs@

OCAMLOPT ?= @OCAMLBIN@ocamlopt.opt
OCAMLOPTFLAGS = @ocamloptflags@

OCAMLDEP ?= @OCAMLBIN@ocamldep
OCAMLDOC ?= @OCAMLBIN@ocamldoc

OCAMLMKLIB ?= @OCAMLBIN@ocamlmklib -ocamlc "$(OCAMLC) $(OCAMLFLAGS)" -ocamlopt "$(OCAMLOPT) $(OCAMLOPTFLAGS)"
OCAMLMKLIBFLAGS ?= @ocamlmklibflags@ -verbose

GNUPLOT = gnuplot

EXAMPLESROOT = @EXAMPLESROOT@

uname_S := $(shell sh -c 'uname -s 2>/dev/null || echo not')
ifneq (,$(findstring MINGW,$(uname_S)))
XA=.lib
XO=.obj
XS=.dll
else
XA=.a
XO=.o
XS=.so
endif

CP     ?= cp
RM     ?= rm
CAT    ?= cat
ECHO   ?= echo
MKDIR  ?= mkdir -p
RMDIR  ?= rmdir
SED    ?= sed

MPI_DIRECTORIES = @ocamlmpi_path@
DIRECTORIES =

MPI_INCLUDES = $(MPI_DIRECTORIES:%=-I %)
INCLUDES = $(DIRECTORIES:%=-I %)

OBJ_OPT = $(OBJ:.cmo=.cmx)

