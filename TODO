
Decisions
---------
* Makefiles will be used for the build system; though we will try to
  simplify and improve them.

* Name and version numbering: Sundials/ML 2.6.0
  first version: Sundials/ML 2.6.0
  first patch:   Sundials/ML 2.6.0p1
  second patch:  Sundials/ML 2.6.0p2

  Have everything working for 2.5.0 (and include a patch file for the
  Sundials source), but make the first official release for 2.6.0.

Priorities
----------
DONE 1. Callbacks with exception checking directly from C.
CANCELLED 2. Access around the weak pointer where possible (through stack).

TODO
----

1. Test under OCaml 3.12.x.

4. Performance issues/tests:
   - Try to have all examples within 2xC (with the possible exception of
     cvode/serial/cvRoberts_dns_uw_alt).

   - Bigarray allocation in root function callbacks.
     Try including a bigarray 'shell' (of int32s) in the session structure,
     as per CVODES/IDAS to avoid allocating at each call.

   - Weak pointer dereference. In a separate branch, test the effect of
     using direct values (especially on examples that are already very fast:
     cvode/serial/cvRoberts_dns. Evaluate the effect using kcachegrind.
     Possibly do callback_exns directly from C, thus eliminating the
     intermediate function.
     RESULTS: no significant effect. Additional complexity not justified.

5. (Jun) OPAM/findlib wrappers.
   - Everything properly supported in a toplevel

6. (Tim) Fix, simplify, and generally tidy up all doc comments. Write the
   missing documentation and rewrite intro.doc.

   Tidy up the documentation; in particular, add @raise tags for functions
   that raise exceptions (like get_dky... )
   Document the ones that correspond to return values mentioned in their
   user guide.  (Or otherwise that are deemed important.)

   Generated text and pdf?
   Automatically check links?
   Break long function types into lines?
   Fix the skeleton programs.

   To explain:
   - Check the various links (@cvode, @cvodes, @ida, @idas, etc.)
     (automatically with a script?)

7. (Tim) Eventual release:
   - Test against OCaml 3.12.x (document in intro.doc, update configure)
   - DÃªpot APP.
   - Repository on Github.
   - Release on Opam.
   - Announce on OCaml and Sundials lists.

MINOR PATCHES
-------------
2. (Tim/Jun) Add the Dls functions to Cvodes/Idas:
     set_dense_jac_fn
     clear_dense_jac_fn
     set_band_jac_fn
     clear_band_jac_fn
   and the Spils functions:
     set_preconditioner
     set_jac_times_vec_fn
     clear_jac_times_vec_fn

   or just provide a reinit function.

   In the doc, mention that these don't reset performance counters.
   But they're discouraged otherwise.

5. Flatten out jacobian_arg

6. Rename CAML_FN everywhere?

7. Add tests for Spils.qr_fact/qr_sol/modified_gs/classical_gs to
   examples/ocaml/linear.

8. Alternate linear solvers for Cvodes.Adjoint and Idas.Adjoint (with
   examples)?

9. Inlude MathJax code in doc folder for offline use?

10. Rearrange the Cvodes/Idas.*.get/get1/get_dky/get_dky1 functions so that
    the array to fill is passed as the first argument, and so that they
    they give a function as a result--this will ensure that the safety
    checks need only be executed once even for multiple calls to these
    functions (especially important for get_dky* which can be called within
    zero-crossing routines).

TO DISCUSS
----------
* Should we check consistency of vector lengths?

  - To do this generically, we need a new function in nvector_*.ml to compare
    array lengths.

  - C-implemented comparator as third field of nvector type.  Provide
    NULL for custom nvectors (which will be implemented in OCaml so
    are safe anyway).

  DONE for cvode, ida, and kinsol.
  TODO: cvodes, idas (different checks for different submodules).

