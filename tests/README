This directory contains a quickcheck suite for testing the sundials binding.
Subdirectories contain manually maintained test cases.  The command

$ make all

compiles and runs a test generator that produces random programs (hereafter
"test cases") that exercise the binding.  You can also test individual modules
by

$ make test-cvode-serial
$ make test-cvode-nvector
$ make test-ida-serial

etc.

When a bug is discovered, it outputs a summary of:

 - the sequence of API calls that provokes the bug
 - what's wrong with the way sundials is behaving
 - what output was observed
 - what output was expected

and saves a complete OCaml code in failed.ml that provokes the bug and prints
the same summary.  The command to compile that generated file is also printed
before the generator exits.  Note failed.ml is overwritten on each run, so you
should copy particularly interesting tests somewhere else.

Before generating tests, the test generator prints the seed value of its random
number generator.  You can force the generator to use a particular seed value,
say 12345, like so:

$ make all PARAMS="--rand-seed 12345"

If you give the same seed, the generator will generate and test the exact same
set of tests.  This includes the ones that succeeded.  If you just want to run
a particular test that failed before, you're better off copying failed.ml
instead.



[Pitfalls]

If quickcheck finds a bug in the binding and you fix that bug, then you should
do a

$ sudo make install

before re-running the same test case.  Alternatively, you can do

$ sudo make uninstall

and re-run the test cases with the libraries uninstalled.

One of these measures is needed because the test cases are compiled to byte
code, and some references to the sundials binding are resolved when the tests
are run, not when they're compiled.  The byte code interpreter seems to favor
linking to libraries installed in system-wide directories like /usr/lib/ocaml
over the ones in the source tree, so any fixes you make are ignored until you
reinstall.  The workaround is to either reinstall the libraries each time you
rebuild them, or otherwise to not have them installed at all.

Test cases must be compiled to byte code because compilation by ocamlopt.opt is
too slow.  They are compiled rather than interpreted by an interpreter that
calls sundials because:

    - In the worst case, Sundials segfaults.  It often corrupts memory in the
      process, so it's impossible to recover cleanly.  Running it in a separate
      process saves the main driver loop from crashing together with the test
      case, so that it can shrink and re-run the test case.

    - Once we find a bug, we have to present a test case to the user, and a
      directly compilable .ml file is the best way to do it.  So, we might as
      well just compile and run that .ml during the generate->test->shrink
      cycle.

If you know a way to force byte codes to link to the libraries in the source
tree, let us know.
